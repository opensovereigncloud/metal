// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package scenarios

import (
	"github.com/onmetal/metal-api/server-exploitation/usecase/serverWarehouse/access"
	"github.com/onmetal/metal-api/types/common"
)

type InstanceEnrollmentUseCase struct {
	instanceExtractor access.InstanceExtractor
	findServer        access.FindServer
	serverEnrollment  access.ServerEnrollment
}

func NewInstanceEnrollmentUseCase(
	instanceExtractor access.InstanceExtractor,
	serverEnrollment access.ServerEnrollment,
	findServer access.FindServer) *InstanceEnrollmentUseCase {
	return &InstanceEnrollmentUseCase{
		instanceExtractor: instanceExtractor,
		findServer:        findServer,
		serverEnrollment:  serverEnrollment,
	}
}

func (i *InstanceEnrollmentUseCase) Execute(instanceMeta common.Metadata) error {
	instance, err := i.instanceExtractor.Get(instanceMeta)
	if err != nil {
		return err
	}
	server, err := i.findServer.ServerForInstance(instance)
	if err != nil {
		return err
	}
	if !i.serverEnrollment.Enrolled(instance) {
		return i.serverEnrollment.CheckOut(server)
	}
	return i.serverEnrollment.CheckIn(server)
}
