// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package rules

import "time"

type TimeRuleNotChangedFor30Minutes struct {
	timeShiftMinutes time.Duration
}

// nolint
func NewTimeRuleNotChangedFor30Minutes() *TimeRuleNotChangedFor30Minutes {
	return &TimeRuleNotChangedFor30Minutes{
		timeShiftMinutes: 30 * time.Minute,
	}
}

func (o *TimeRuleNotChangedFor30Minutes) OlderThan(creationTime time.Time) bool {
	currentTime := time.Now()
	creationAwaitTimeout := creationTime.Add(o.timeShiftMinutes)
	return currentTime.After(creationAwaitTimeout)
}
