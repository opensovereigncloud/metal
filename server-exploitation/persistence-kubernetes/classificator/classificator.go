// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package classificator

import (
	inventoriesv1alpha1 "github.com/onmetal/metal-api/apis/inventory/v1alpha1"
)

type InstanceClassificationImpl struct {
	labels map[string]string
}

func NewInstanceClassificationByLabel(labels map[string]string) *InstanceClassificationImpl {
	return &InstanceClassificationImpl{
		labels: labels,
	}
}

func (i *InstanceClassificationImpl) IsMachine() bool {
	classMachine, ok := i.labels[inventoriesv1alpha1.GetSizeMatchLabel(i.machineSize())]
	if !ok {
		return false
	}
	return classMachine != ""
}

func (i *InstanceClassificationImpl) IsSwitch() bool {
	classSwitch, ok := i.labels[inventoriesv1alpha1.GetSizeMatchLabel(i.switchSize())]
	if !ok {
		return false
	}
	return classSwitch != ""
}

func (i *InstanceClassificationImpl) machineSize() string {
	return "machine"
}

func (i *InstanceClassificationImpl) switchSize() string {
	return "switch"
}
