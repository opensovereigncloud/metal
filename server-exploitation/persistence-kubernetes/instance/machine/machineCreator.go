// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package machine

import (
	inventoriesv1alpha1 "github.com/onmetal/metal-api/apis/inventory/v1alpha1"
	machinev1alpaha2 "github.com/onmetal/metal-api/apis/machine/v1alpha2"
	domain "github.com/onmetal/metal-api/server-exploitation/domain/serverWarehouse"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ServerAccount struct {
	serverAccount *inventoriesv1alpha1.Inventory
}

func NewMachineInstanceCreator(serverAccount *inventoriesv1alpha1.Inventory) *ServerAccount {
	return &ServerAccount{
		serverAccount: serverAccount,
	}
}

func (m *ServerAccount) NewInstance() domain.Instance {
	instance := m.prepareMachineInstance()
	instance.Labels = copySizeLabelsToMachine(instance.Labels, m.serverAccount.Labels)
	instance.Spec = updateInstanceSpecData(instance.Spec, m.serverAccount.Spec.System)
	return NewMachineInstance(instance)
}

func (m *ServerAccount) prepareMachineInstance() *machinev1alpaha2.Machine {
	return &machinev1alpaha2.Machine{
		ObjectMeta: metav1.ObjectMeta{
			Name:      m.serverAccount.Name,
			Namespace: m.serverAccount.Namespace,
			Labels:    map[string]string{machinev1alpaha2.UUIDLabel: m.serverAccount.Name},
		},
		Spec: machinev1alpaha2.MachineSpec{},
	}
}

func updateInstanceSpecData(instanceSpec machinev1alpaha2.MachineSpec,
	serverAccountSystemSpec *inventoriesv1alpha1.SystemSpec) machinev1alpaha2.MachineSpec {
	instanceSpec.InventoryRequested = false
	instanceSpec.Identity = updateIdentity(serverAccountSystemSpec)
	return instanceSpec
}

func updateIdentity(serverAccountSystemSpec *inventoriesv1alpha1.SystemSpec) machinev1alpaha2.Identity {
	return machinev1alpaha2.Identity{
		SKU:          serverAccountSystemSpec.ProductSKU,
		SerialNumber: serverAccountSystemSpec.SerialNumber,
	}
}
