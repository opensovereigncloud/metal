// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package switches

import (
	inventoriesv1alpha1 "github.com/onmetal/metal-api/apis/inventory/v1alpha1"
	switchv1beta1 "github.com/onmetal/metal-api/apis/switch/v1beta1"
	domain "github.com/onmetal/metal-api/server-exploitation/domain/serverWarehouse"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ServerAccount struct {
	serverAccount *inventoriesv1alpha1.Inventory
}

func NewSwitchInstanceCreator(serverAccount *inventoriesv1alpha1.Inventory) *ServerAccount {
	return &ServerAccount{
		serverAccount: serverAccount,
	}
}

func (s *ServerAccount) NewInstance() domain.Instance {
	instance := s.prepareSwitchInstance()
	return NewSwitchInstance(instance)
}

func (s *ServerAccount) prepareSwitchInstance() *switchv1beta1.Switch {
	return &switchv1beta1.Switch{
		ObjectMeta: metav1.ObjectMeta{
			Name:      s.serverAccount.Spec.Host.Name,
			Namespace: s.serverAccount.Namespace,
			Labels: map[string]string{
				switchv1beta1.InventoriedLabel:  "true",
				switchv1beta1.InventoryRefLabel: s.serverAccount.Name,
			},
		},
		Spec: switchv1beta1.SwitchSpec{
			UUID:     s.serverAccount.Name,
			TopSpine: false,
			Managed:  true,
			Cordon:   false,
		},
	}
}
