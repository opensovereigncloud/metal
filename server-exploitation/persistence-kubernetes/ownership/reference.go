// /*
// Copyright (c) 2022 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

package ownership

import (
	"errors"

	machinev1alpha2 "github.com/onmetal/metal-api/apis/machine/v1alpha2"
	"github.com/onmetal/metal-api/types/common"
)

var (
	errReferenceExist = errors.New("object reference exist")
)

func machineOwnerReference(machine *machinev1alpha2.Machine) common.OwnerReference {
	return common.OwnerReference{
		Name:       machine.Name,
		Kind:       machine.Kind,
		APIVersion: machine.APIVersion,
		UniqueID:   string(machine.UID),
	}
}

func referenceExist(references []common.OwnerReference, newReferenceName string) bool {
	for r := range references {
		if references[r].Name == newReferenceName {
			return true
		}
	}
	return false
}
