name: Docker - Release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: core.harbor.onmetal.de/onmetal/switch-operator

jobs:
  lint:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Configure git for private modules
        run: git config --global url."https://${{ secrets.GIT_USER }}:${{ secrets.GIT_PASSWORD }}@github.com".insteadOf "https://github.com"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42
  tests:
    needs: lint
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Configure git for private modules
        run: git config --global url."https://${{ secrets.GIT_USER }}:${{ secrets.GIT_PASSWORD }}@github.com".insteadOf "https://github.com"

      - name: run tests
        run: make test

  release:
    needs: tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg GOPRIVATE="github.com/onmetal/*" --build-arg GIT_USER=${{ secrets.GIT_USER }} --build-arg GIT_PASSWORD=${{ secrets.GIT_PASSWORD }}

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_PASS }}" | docker login -u ${{ secrets.DOCKERHUB_USER }} core.harbor.onmetal.de --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
                
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
                
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_NAME
