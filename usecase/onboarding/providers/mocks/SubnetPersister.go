// Code generated by mockery v2.33.0. DO NOT EDIT.

package mocks

import (
	dto "github.com/onmetal/metal-api/usecase/onboarding/dto"
	mock "github.com/stretchr/testify/mock"
)

// SubnetPersister is an autogenerated mock type for the SubnetPersister type
type SubnetPersister struct {
	mock.Mock
}

// Save provides a mock function with given fields: info
func (_m *SubnetPersister) Save(info dto.SubnetInfo) error {
	ret := _m.Called(info)

	var r0 error
	if rf, ok := ret.Get(0).(func(dto.SubnetInfo) error); ok {
		r0 = rf(info)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSubnetPersister creates a new instance of SubnetPersister. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSubnetPersister(t interface {
	mock.TestingT
	Cleanup(func())
}) *SubnetPersister {
	mock := &SubnetPersister{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
