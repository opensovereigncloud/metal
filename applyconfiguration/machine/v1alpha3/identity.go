/*
Copyright (c) 2023 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

// IdentityApplyConfiguration represents an declarative configuration of the Identity type for use
// with apply.
type IdentityApplyConfiguration struct {
	SKU          *string                      `json:"sku,omitempty"`
	SerialNumber *string                      `json:"serial_number,omitempty"`
	Asset        *string                      `json:"asset,omitempty"`
	Internal     []InternalApplyConfiguration `json:"internal,omitempty"`
}

// IdentityApplyConfiguration constructs an declarative configuration of the Identity type for use with
// apply.
func Identity() *IdentityApplyConfiguration {
	return &IdentityApplyConfiguration{}
}

// WithSKU sets the SKU field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SKU field is set to the value of the last call.
func (b *IdentityApplyConfiguration) WithSKU(value string) *IdentityApplyConfiguration {
	b.SKU = &value
	return b
}

// WithSerialNumber sets the SerialNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SerialNumber field is set to the value of the last call.
func (b *IdentityApplyConfiguration) WithSerialNumber(value string) *IdentityApplyConfiguration {
	b.SerialNumber = &value
	return b
}

// WithAsset sets the Asset field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Asset field is set to the value of the last call.
func (b *IdentityApplyConfiguration) WithAsset(value string) *IdentityApplyConfiguration {
	b.Asset = &value
	return b
}

// WithInternal adds the given value to the Internal field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Internal field.
func (b *IdentityApplyConfiguration) WithInternal(values ...*InternalApplyConfiguration) *IdentityApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithInternal")
		}
		b.Internal = append(b.Internal, *values[i])
	}
	return b
}
