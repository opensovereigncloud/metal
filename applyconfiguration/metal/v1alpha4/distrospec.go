/*
Copyright (c) 2023 T-Systems International GmbH, SAP SE or an SAP affiliate company. All right reserved

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

// DistroSpecApplyConfiguration represents an declarative configuration of the DistroSpec type for use
// with apply.
type DistroSpecApplyConfiguration struct {
	BuildVersion  *string `json:"buildVersion,omitempty"`
	DebianVersion *string `json:"debianVersion,omitempty"`
	KernelVersion *string `json:"kernelVersion,omitempty"`
	AsicType      *string `json:"asicType,omitempty"`
	CommitID      *string `json:"commitID,omitempty"`
	BuildDate     *string `json:"buildDate,omitempty"`
	BuildNumber   *uint32 `json:"buildNumber,omitempty"`
	BuildBy       *string `json:"buildBy,omitempty"`
}

// DistroSpecApplyConfiguration constructs an declarative configuration of the DistroSpec type for use with
// apply.
func DistroSpec() *DistroSpecApplyConfiguration {
	return &DistroSpecApplyConfiguration{}
}

// WithBuildVersion sets the BuildVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildVersion field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithBuildVersion(value string) *DistroSpecApplyConfiguration {
	b.BuildVersion = &value
	return b
}

// WithDebianVersion sets the DebianVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DebianVersion field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithDebianVersion(value string) *DistroSpecApplyConfiguration {
	b.DebianVersion = &value
	return b
}

// WithKernelVersion sets the KernelVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KernelVersion field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithKernelVersion(value string) *DistroSpecApplyConfiguration {
	b.KernelVersion = &value
	return b
}

// WithAsicType sets the AsicType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AsicType field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithAsicType(value string) *DistroSpecApplyConfiguration {
	b.AsicType = &value
	return b
}

// WithCommitID sets the CommitID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CommitID field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithCommitID(value string) *DistroSpecApplyConfiguration {
	b.CommitID = &value
	return b
}

// WithBuildDate sets the BuildDate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildDate field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithBuildDate(value string) *DistroSpecApplyConfiguration {
	b.BuildDate = &value
	return b
}

// WithBuildNumber sets the BuildNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildNumber field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithBuildNumber(value uint32) *DistroSpecApplyConfiguration {
	b.BuildNumber = &value
	return b
}

// WithBuildBy sets the BuildBy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildBy field is set to the value of the last call.
func (b *DistroSpecApplyConfiguration) WithBuildBy(value string) *DistroSpecApplyConfiguration {
	b.BuildBy = &value
	return b
}
