// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

import (
	v1alpha4 "github.com/ironcore-dev/metal/apis/metal/v1alpha4"
)

// InventoryStatusApplyConfiguration represents an declarative configuration of the InventoryStatus type for use
// with apply.
type InventoryStatusApplyConfiguration struct {
	Computed          *v1alpha4.AggregationResults         `json:"computed,omitempty"`
	InventoryStatuses *InventoryStatusesApplyConfiguration `json:"inventoryStatuses,omitempty"`
}

// InventoryStatusApplyConfiguration constructs an declarative configuration of the InventoryStatus type for use with
// apply.
func InventoryStatus() *InventoryStatusApplyConfiguration {
	return &InventoryStatusApplyConfiguration{}
}

// WithComputed sets the Computed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Computed field is set to the value of the last call.
func (b *InventoryStatusApplyConfiguration) WithComputed(value v1alpha4.AggregationResults) *InventoryStatusApplyConfiguration {
	b.Computed = &value
	return b
}

// WithInventoryStatuses sets the InventoryStatuses field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InventoryStatuses field is set to the value of the last call.
func (b *InventoryStatusApplyConfiguration) WithInventoryStatuses(value *InventoryStatusesApplyConfiguration) *InventoryStatusApplyConfiguration {
	b.InventoryStatuses = value
	return b
}
