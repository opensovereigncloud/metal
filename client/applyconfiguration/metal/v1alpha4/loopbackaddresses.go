// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

import (
	v1alpha4 "github.com/ironcore-dev/metal/apis/metal/v1alpha4"
)

// LoopbackAddressesApplyConfiguration represents an declarative configuration of the LoopbackAddresses type for use
// with apply.
type LoopbackAddressesApplyConfiguration struct {
	IPv4 *v1alpha4.IPAddrSpec `json:"ipv4,omitempty"`
	IPv6 *v1alpha4.IPAddrSpec `json:"ipv6,omitempty"`
}

// LoopbackAddressesApplyConfiguration constructs an declarative configuration of the LoopbackAddresses type for use with
// apply.
func LoopbackAddresses() *LoopbackAddressesApplyConfiguration {
	return &LoopbackAddressesApplyConfiguration{}
}

// WithIPv4 sets the IPv4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPv4 field is set to the value of the last call.
func (b *LoopbackAddressesApplyConfiguration) WithIPv4(value v1alpha4.IPAddrSpec) *LoopbackAddressesApplyConfiguration {
	b.IPv4 = &value
	return b
}

// WithIPv6 sets the IPv6 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPv6 field is set to the value of the last call.
func (b *LoopbackAddressesApplyConfiguration) WithIPv6(value v1alpha4.IPAddrSpec) *LoopbackAddressesApplyConfiguration {
	b.IPv6 = &value
	return b
}
