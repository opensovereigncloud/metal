// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

import (
	v1alpha4 "github.com/ironcore-dev/metal/apis/metal/v1alpha4"
)

// BenchmarkStatusApplyConfiguration represents an declarative configuration of the BenchmarkStatus type for use
// with apply.
type BenchmarkStatusApplyConfiguration struct {
	BenchmarkDeviations map[string]v1alpha4.BenchmarkDeviations `json:"machine_deviation,omitempty"`
}

// BenchmarkStatusApplyConfiguration constructs an declarative configuration of the BenchmarkStatus type for use with
// apply.
func BenchmarkStatus() *BenchmarkStatusApplyConfiguration {
	return &BenchmarkStatusApplyConfiguration{}
}

// WithBenchmarkDeviations puts the entries into the BenchmarkDeviations field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the BenchmarkDeviations field,
// overwriting an existing map entries in BenchmarkDeviations field with the same key.
func (b *BenchmarkStatusApplyConfiguration) WithBenchmarkDeviations(entries map[string]v1alpha4.BenchmarkDeviations) *BenchmarkStatusApplyConfiguration {
	if b.BenchmarkDeviations == nil && len(entries) > 0 {
		b.BenchmarkDeviations = make(map[string]v1alpha4.BenchmarkDeviations, len(entries))
	}
	for k, v := range entries {
		b.BenchmarkDeviations[k] = v
	}
	return b
}
