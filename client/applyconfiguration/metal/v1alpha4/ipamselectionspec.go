// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

import (
	v1 "github.com/ironcore-dev/metal/client/applyconfiguration/meta/v1"
)

// IPAMSelectionSpecApplyConfiguration represents an declarative configuration of the IPAMSelectionSpec type for use
// with apply.
type IPAMSelectionSpecApplyConfiguration struct {
	LabelSelector *v1.LabelSelectorApplyConfiguration  `json:"labelSelector,omitempty"`
	FieldSelector *FieldSelectorSpecApplyConfiguration `json:"fieldSelector,omitempty"`
}

// IPAMSelectionSpecApplyConfiguration constructs an declarative configuration of the IPAMSelectionSpec type for use with
// apply.
func IPAMSelectionSpec() *IPAMSelectionSpecApplyConfiguration {
	return &IPAMSelectionSpecApplyConfiguration{}
}

// WithLabelSelector sets the LabelSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelSelector field is set to the value of the last call.
func (b *IPAMSelectionSpecApplyConfiguration) WithLabelSelector(value *v1.LabelSelectorApplyConfiguration) *IPAMSelectionSpecApplyConfiguration {
	b.LabelSelector = value
	return b
}

// WithFieldSelector sets the FieldSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FieldSelector field is set to the value of the last call.
func (b *IPAMSelectionSpecApplyConfiguration) WithFieldSelector(value *FieldSelectorSpecApplyConfiguration) *IPAMSelectionSpecApplyConfiguration {
	b.FieldSelector = value
	return b
}
