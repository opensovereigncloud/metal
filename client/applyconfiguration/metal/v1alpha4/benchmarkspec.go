// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

import (
	v1alpha4 "github.com/ironcore-dev/metal/apis/metal/v1alpha4"
)

// BenchmarkSpecApplyConfiguration represents an declarative configuration of the BenchmarkSpec type for use
// with apply.
type BenchmarkSpecApplyConfiguration struct {
	Benchmarks map[string]v1alpha4.Benchmarks `json:"benchmarks,omitempty"`
}

// BenchmarkSpecApplyConfiguration constructs an declarative configuration of the BenchmarkSpec type for use with
// apply.
func BenchmarkSpec() *BenchmarkSpecApplyConfiguration {
	return &BenchmarkSpecApplyConfiguration{}
}

// WithBenchmarks puts the entries into the Benchmarks field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Benchmarks field,
// overwriting an existing map entries in Benchmarks field with the same key.
func (b *BenchmarkSpecApplyConfiguration) WithBenchmarks(entries map[string]v1alpha4.Benchmarks) *BenchmarkSpecApplyConfiguration {
	if b.Benchmarks == nil && len(entries) > 0 {
		b.Benchmarks = make(map[string]v1alpha4.Benchmarks, len(entries))
	}
	for k, v := range entries {
		b.Benchmarks[k] = v
	}
	return b
}
