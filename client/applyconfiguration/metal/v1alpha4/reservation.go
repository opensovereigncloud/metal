// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

// ReservationApplyConfiguration represents an declarative configuration of the Reservation type for use
// with apply.
type ReservationApplyConfiguration struct {
	Status    *string                              `json:"status,omitempty"`
	Class     *string                              `json:"class,omitempty"`
	Reference *ResourceReferenceApplyConfiguration `json:"reference,omitempty"`
}

// ReservationApplyConfiguration constructs an declarative configuration of the Reservation type for use with
// apply.
func Reservation() *ReservationApplyConfiguration {
	return &ReservationApplyConfiguration{}
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ReservationApplyConfiguration) WithStatus(value string) *ReservationApplyConfiguration {
	b.Status = &value
	return b
}

// WithClass sets the Class field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Class field is set to the value of the last call.
func (b *ReservationApplyConfiguration) WithClass(value string) *ReservationApplyConfiguration {
	b.Class = &value
	return b
}

// WithReference sets the Reference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reference field is set to the value of the last call.
func (b *ReservationApplyConfiguration) WithReference(value *ResourceReferenceApplyConfiguration) *ReservationApplyConfiguration {
	b.Reference = value
	return b
}
