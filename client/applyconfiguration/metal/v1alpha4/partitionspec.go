// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha4

// PartitionSpecApplyConfiguration represents an declarative configuration of the PartitionSpec type for use
// with apply.
type PartitionSpecApplyConfiguration struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Size *uint64 `json:"size,omitempty"`
}

// PartitionSpecApplyConfiguration constructs an declarative configuration of the PartitionSpec type for use with
// apply.
func PartitionSpec() *PartitionSpecApplyConfiguration {
	return &PartitionSpecApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *PartitionSpecApplyConfiguration) WithID(value string) *PartitionSpecApplyConfiguration {
	b.ID = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *PartitionSpecApplyConfiguration) WithName(value string) *PartitionSpecApplyConfiguration {
	b.Name = &value
	return b
}

// WithSize sets the Size field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size field is set to the value of the last call.
func (b *PartitionSpecApplyConfiguration) WithSize(value uint64) *PartitionSpecApplyConfiguration {
	b.Size = &value
	return b
}
